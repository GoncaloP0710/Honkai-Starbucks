import { JsonObject } from "config_file.js";
import EnkaSystem, { HoyoType } from "enka-system/dist/client/EnkaSystem";
import User from "enka-system/dist/structures/User";
import EnkaLibrary, { ExtractBuildType } from "enka-system/dist/client/EnkaLibrary";
import CharacterBuild from "enka-system/dist/structures/CharacterBuild";
import EnkaGameAccount from "enka-system/dist/structures/EnkaGameAccount";
/**
 * The Enka.Network account
 */
declare class EnkaProfile {
    /**  */
    readonly system: EnkaSystem;
    /**  */
    readonly username: string;
    /**  */
    readonly bio: string;
    /**  */
    readonly avatar: string | null;
    /**  */
    readonly imageUrl: string | null;
    /**  */
    readonly level: number;
    /**  */
    readonly signupState: number;
    /**  */
    readonly url: string;
    readonly _data: JsonObject;
    /**
     * @param data
     * @param system
     */
    constructor(system: EnkaSystem, data: JsonObject);
    /**
     * @param allowedHoyoTypes hoyoTypes to filter
     * @returns the all game accounts added to the Enka.Network account
     */
    fetchGameAccounts(allowedHoyoTypes?: HoyoType[] | undefined): Promise<EnkaGameAccount<EnkaLibrary<User, CharacterBuild>>[]>;
    /**
     * @param hash the game account hash
     * @returns the game account added to the Enka.Network account
     */
    fetchGameAccount<T extends EnkaLibrary<User, CharacterBuild>>(hash: string): Promise<EnkaGameAccount<T>>;
    /**
     * @param hash the game account hash
     * @returns the game character builds including saved builds in the Enka.Network game account
     */
    fetchBuilds<T extends EnkaLibrary<User, CharacterBuild>>(hash: string): Promise<{
        [characterId: string]: ExtractBuildType<T>[];
    }>;
}
export default EnkaProfile;
