import { JsonObject } from "config_file.js";
import { StarRail } from "../../../client/StarRail";
import { LeveledSkill, Skill } from "./Skill";
import { TextAssets } from "../../assets/TextAssets";
import { ImageAssets } from "../../assets/ImageAssets";
import { StatPropertyValue } from "../../StatProperty";
import { SkillLevel } from "./SkillLevel";
import { DynamicTextAssets } from "../../assets/DynamicTextAssets";
export declare class SkillTreeNode {
    readonly id: number;
    readonly client: StarRail;
    readonly characterId: number;
    readonly maxLevel: number;
    readonly isUnlockedByDefault: boolean;
    readonly levelUpSkills: Skill[];
    readonly name: TextAssets;
    readonly icon: ImageAssets;
    readonly previousNodeId: number | null;
    readonly _nodesData: JsonObject[];
    constructor(id: number, client: StarRail, nodeIndexToUse?: number);
    getSkillTreeNodeByLevel(level: SkillLevel): LeveledSkillTreeNode;
    getPreviousNodes(): SkillTreeNode | null;
    getNextNodes(): SkillTreeNode[];
}
export declare class LeveledSkillTreeNode extends SkillTreeNode {
    readonly level: SkillLevel;
    readonly stats: StatPropertyValue[];
    readonly paramList: number[];
    /** This text assets can be invalid which throws AssetsNotFoundError in its `get` method. For full description use {@apilink LeveledSkillTreeNode#getFullDescription} method instead. */
    readonly description: DynamicTextAssets;
    readonly _data: JsonObject;
    constructor(data: JsonObject, level: SkillLevel, client: StarRail);
    hasSimpleDescription(): boolean;
    getFullDescription(simple: boolean): {
        desc: DynamicTextAssets;
        ref: LeveledSkill | StatPropertyValue | null;
        simple: boolean;
    }[];
}
